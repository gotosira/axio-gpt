"use client";

import { Button } from "@/components/ui/button";

interface AssistantWelcomeProps {
  assistantId: string;
  onSuggestionClick: (suggestion: string) => void;
}

export function AssistantWelcome({ assistantId, onSuggestionClick }: AssistantWelcomeProps) {
  const assistants = {
    'asst_sS0Sa5rqQFrrwnwkJ9mULGp0': { // BaoBao
      name: 'BaoBao',
      title: 'UX Writer',
      avatar: '/avatars/BaoBao.jpeg',
      author: 'community builder',
      model: 'GPT-5 Thinking',
      greeting: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! üëã',
      description: 'BaoBao ‡πÄ‡∏õ‡πá‡∏ô UX Writer ‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏†‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡∏ï‡∏£‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô ‡πÅ‡∏•‡∏∞‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏Å‡∏©‡∏ï‡∏£‡∏Å‡∏£ (Farmer), ‡∏ó‡∏µ‡∏°‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô (Back Office), ‡∏ó‡∏µ‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô (Frontline), ‡∏´‡∏£‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç (Specialist) üéØ',
      suggestions: [
        'BaoBao ‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡∏¥‡∏î‡∏Ñ‡∏≥ ‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤ UI ‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏™‡∏¥',
        'BaoBao ‡πÄ‡∏î‡πà‡∏ß‡∏â‡∏±‡∏ô‡∏à‡∏∞ ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡πÉ‡∏´‡πâ ‡∏ä‡πà‡∏ß‡∏¢‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢',
        'BaoBao ‡∏ä‡πà‡∏ß‡∏¢‡∏ö‡∏≠‡∏Å ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ ‡∏†‡∏≤‡∏©‡∏≤ ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ú‡∏π‡πâ...',
        'BaoBao ‡πÅ‡∏õ‡∏• ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏ô Mockup ‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© ‡∏ó‡∏µ‡πà...'
      ]
    },
    'asst_CO7qtWO5QTfgV0Gyv77XQY8q': { // DeeDee
      name: 'DeeDee',
      title: 'UX Research',
      avatar: '/avatars/DeeDee.png',
      author: 'chanitha boontarak',
      greeting: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏£‡∏≤‡∏ä‡∏∑‡πà‡∏≠ DeeDee [‡∏î‡∏µ‡∏î‡∏µ]',
      description: '‡πÄ‡∏£‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô‡∏Å‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÉ‡∏´‡πâ‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏≤‡∏ô UX ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏î‡∏µ ‚ù§Ô∏è ‡∏ñ‡πâ‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!',
      suggestions: [
        '‡∏â‡∏±‡∏ô‡∏°‡∏µ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ DeeDee',
        '‡∏â‡∏±‡∏ô‡∏°‡∏µ UI ‡∏°‡∏≤ ‡πÉ‡∏´‡πâ DeeDee ‡∏î‡∏π',
        '‡∏â‡∏±‡∏ô‡∏°‡∏µ Objective ‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏•‡∏∞ DeeDee'
      ]
    },
    'asst_Pi6FrBRHRpvhwSOIryJvDo3T': { // PungPung
      name: 'PungPung',
      title: 'UX Analyst',
      avatar: '/avatars/PungPung.png',
      author: 'chanitha boontarak',
      greeting: 'Hello! My name is PungPung [‡∏õ‡∏±‡∏á‡∏õ‡∏±‡∏á]',
      description: 'your assistant to make your work many times more "Pung" (awesome/successful) ‚ú® with the ability to summarize and analyze Product Feedback data. If you\'re ready, click on the topic you want us to help with!',
      suggestions: [
        { text: '‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', subtext: 'Feedback', icon: 'üí¨' },
        { text: '‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', subtext: '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô CSAT', icon: '‚≠ê' }
      ]
    },
    'asst_4nCaYlt7AA5Ro4pseDCTbKHO': { // FlowFlow
      name: 'FlowFlow',
      title: 'UX/UI Designer',
      avatar: '/avatars/FlowFlow.jpeg',
      author: 'community builder',
      model: 'GPT-5',
      greeting: 'Hello~ We are FlowFlow (FlowFlow) üêô',
      description: 'We were born to help design UX/UI to be awesome, beautiful, and meet AXONS standards! Whether it\'s Web or Mobile, we are ready to recommend smooth usage on all platforms üíª',
      suggestions: [
        '‡∏ä‡πà‡∏ß‡∏¢‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏£‡∏∑‡∏≠ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ System Icon ‡πÉ‡∏´‡πâ‡∏â‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢',
        '‡πÄ‡∏î‡πã‡∏ß‡∏à‡∏∞‡∏™‡πà‡∏á Mockup ‡πÉ‡∏´‡πâ ‡∏ä‡πà‡∏ß‡∏¢‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏à‡πâ‡∏≤',
        '‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏£‡πà‡∏≤‡∏á Wireframe ‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πà‡∏≠‡∏¢',
        '‡∏Ç‡∏≠‡∏•‡∏¥‡∏á‡∏Ñ‡πå Design Template ‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö'
      ]
    }
  };

  const assistant = assistants[assistantId as keyof typeof assistants];

  if (!assistant) {
    return null;
  }

  return (
    <div className="flex flex-col items-center justify-center min-h-[60vh] px-6 py-12">
      {/* Avatar */}
      <div className="w-24 h-24 rounded-full mb-6 overflow-hidden border-2 border-gray-200">
        <img
          src={assistant.avatar}
          alt={assistant.name}
          className="w-full h-full object-cover"
          onError={(e) => {
            e.currentTarget.src = '/avatars/BaoBao.jpeg';
          }}
        />
      </div>

      {/* Title */}
      <h1 className="text-3xl font-bold text-gray-900 mb-2">
        {assistant.name} - {assistant.title}
      </h1>

      {/* Author */}
      <div className="flex items-center gap-1 text-gray-600 mb-4">
        <span className="text-sm">By {assistant.author}</span>
        <span className="text-xs">üë§</span>
      </div>

      {/* Model Info */}
      {assistant.model && (
        <div className="flex items-center gap-1 text-gray-600 mb-6">
          <span className="text-sm">‚úì Using the creator's recommended model: {assistant.model}</span>
        </div>
      )}

      {/* Greeting */}
      <div className="text-lg font-medium text-gray-900 mb-4 text-center">
        {assistant.greeting}
      </div>

      {/* Description */}
      <div className="text-gray-700 mb-8 max-w-2xl text-center leading-relaxed">
        {assistant.description}
      </div>

      {/* Suggestions */}
      <div className="grid gap-3 w-full max-w-4xl">
        {assistant.suggestions.map((suggestion, index) => (
          <div key={index} className="flex justify-center">
            {typeof suggestion === 'string' ? (
              <Button
                variant="outline"
                className="w-full max-w-md h-auto p-4 text-left justify-start border-gray-200 hover:border-blue-300 hover:bg-blue-50"
                onClick={() => onSuggestionClick(suggestion)}
              >
                <span className="text-sm">{suggestion}</span>
              </Button>
            ) : (
              <Button
                variant="outline"
                className="w-full max-w-md h-auto p-4 text-left justify-start border-gray-200 hover:border-blue-300 hover:bg-blue-50"
                onClick={() => onSuggestionClick(`${suggestion.text} ${suggestion.subtext}`)}
              >
                <div className="flex items-center gap-3 w-full">
                  <span className="text-2xl">{suggestion.icon}</span>
                  <div className="flex flex-col">
                    <span className="text-sm font-medium">{suggestion.text}</span>
                    <span className="text-xs text-gray-600">{suggestion.subtext}</span>
                  </div>
                </div>
              </Button>
            )}
          </div>
        ))}
      </div>
    </div>
  );
}
